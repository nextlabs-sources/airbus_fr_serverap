###################################################
####										   ####	
####  ServerAttributeProvider Properties File  ####
####										   ####	
###################################################

##############################
# Plugin general information #
##############################

name = ResourceReferentialPlugin
jar-path = C:/Program Files/Apache Software Foundation/Tomcat 8.5/nextlabs/dpc/jservice/jar/ResourceReferentialPlugin.jar
friendly_name = Resource Referential Plugin
description = Resource Referential Plugin

#######################
# Caching information #
#######################

# Cache heap size in MB, does not see to too high value, will causing the program slow down
cache_heap_in_mb=2048
# Max objects in one cache element (withSizeOfMaxObjectGraph)
cache_max_object=50000
# number of retries if the refresh encounter exception
number_of_retries=3
# interval between retries, in seconds
interval_between_retries=30
# the maximum period that a cache entry stays in the cache since the entry to the cache
# the format should be <period>_<unit>, where unit can be SECS, MINS, HRS and DAYS, e.g. 1_MINS
time_to_live=1_MINS
# Cache expired mode for resource cache, live or purge
expired_mode=purge
#Time of the day the resource cache get purge, this setting is needed is expired_mode is set to purge
purge_time=23:59
#Setting to control whether to pull all the resource data from database after purge
refresh=true
###################
# PIP Information #
###################

########################
# Database Information #
########################

# The string to return when the result is a NULL object. By commenting out this property, a NULL object will be returned
null_string = NO_DATA

# Database properties
DB_1_database_url =  jdbc:sqlserver://GENSQL02W12R2:1433;databaseName=DSF_TEST
DB_1_database_driver_name = com.microsoft.sqlserver.jdbc.SQLServerDriver
DB_1_database_username = airbus
DB_1_database_password = 123blue!
DB_1_database_password_encrypted = false
DB_1_database_schema_name = sch_DSF

## multiple key attributes can be configured, separated by comma, prefixed by case sensitivity, ended with table column name e.g. ci:id:obid
DB_1_key_attributes = ci:id:obid
## multiple attributes to pull can be configured, separated by comma, prefixed by cardinality and ended with table column name e.g. multi:citizenship:citizhenship,single:department:location
DB_1_attributes_to_pull = single:excc1:id_excc1t,single:indcl:id_indct,single:milcl:id_milct

DB_1_proghd_attributes_to_pull = multi:hcp:progk,multi:hcpversion:provs

DB_1_progit_attributes_to_pull = multi:hcp_indct:id_indct,multi:hcp_milct:id_milct,multi:hcp_excc:id_excc1t

DB_1_excc2t_attributes_to_pull = multi:excc2:excc2

DB_1_maex_attributes_to_pull = multi:excc2_1:embgr

DB_1_prog_key_attributes = ci:id:id_hd

DB_1_prog_attributes_to_pull = multi:hcp_indct:id_indct,multi:hcp_milct:id_milct,multi:hcp_excc:id_excc1t
